---
import { getAllZonesServer } from "../../../../lib/zones-crud-server.js"; // Importamos la función para obtener zonas
import ListingsPostForm from "../../../components/ListingsPostForm.astro";
import Nav from "../../../components/utils/Nav.astro";
import "/src/styles/global.css"; // Importar estilos globales

// Para obtener el 'id' del post de la URL
export async function getStaticPaths() {
  // En un CMS real, obtendrías los IDs de Firestore aquí
  // Para desarrollo, podrías hacer un fetch directo o simplemente
  // manejar la carga en el cliente para el modo de edición
  return [{ params: { id: "some-post-id" } }]; // Solo un placeholder
}

// 1. Preparamos la config en la PÁGINA
const firebaseConfig = {
  apiKey: import.meta.env.PUBLIC_FIREBASE_API_KEY,
  authDomain: import.meta.env.PUBLIC_FIREBASE_AUTH_DOMAIN,
  projectId: import.meta.env.PUBLIC_FIREBASE_PROJECT_ID,
  appId: import.meta.env.PUBLIC_FIREBASE_APP_ID,
};

const { id } = Astro.params;
const zones = await getAllZonesServer(); // Obtenemos la lista de zonas desde el servidor
---

<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Editar Post: {id}</title>
    <style>
      /* Estilos básicos */
    </style>
  </head>
  <body>
    <Nav currentPage="listings" />
    <ListingsPostForm postId={id} firebaseConfig={firebaseConfig} zones={zones} />
  </body>
</html>
